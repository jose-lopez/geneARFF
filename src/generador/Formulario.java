/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package generador;

import javax.swing.JFileChooser;
import javax.swing.DefaultListModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.util.List;
import java.util.Iterator;
import javax.swing.ListModel;

/**
 *
 * @author Lorena
 */
public class Formulario extends javax.swing.JFrame {

    /**
     * Creates new form Formulario
     */
    
    File archivo, carpeta;
    DefaultListModel modelo1 = new DefaultListModel();
    DefaultListModel modelo2 = new DefaultListModel();
    boolean band1 = false, band2 = false;
    
    public Formulario() {
        initComponents();
        jSpinner1.setValue(5);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jLabel1.setText("Generador Arff AA");

        jButton1.setText("Examinar...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Seleccione la cantidad de la subcadena");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ExonIntron", "IntronExon", "ZIExon", "ExonZI" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jList1.setToolTipText("");
        jList1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jList1);

        jLabel3.setText("Archivos Positivos");

        jList2.setToolTipText("");
        jList2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane2.setViewportView(jList2);

        jLabel4.setText("Archivos Negativos");

        jButton2.setText("Examinar...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Destino");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton3.setText("Examinar...");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Generar Arff");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 35, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
                    fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                    int returnValue = fileChooser.showOpenDialog(null);
                    if (returnValue == JFileChooser.APPROVE_OPTION) {
                      carpeta = fileChooser.getSelectedFile();
                      jTextField1.setText(carpeta.toString());
                    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        fileChooser.setFileFilter(filter);
                    fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
                    int returnValue = fileChooser.showOpenDialog(null);
                    if (returnValue == JFileChooser.APPROVE_OPTION) {
                        archivo = fileChooser.getSelectedFile();
                        System.out.println(archivo);
                        modelo1.addElement(archivo);
                        jList1.setModel(modelo1);
                    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        fileChooser.setFileFilter(filter);
                    fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
                    int returnValue = fileChooser.showOpenDialog(null);
                    if (returnValue == JFileChooser.APPROVE_OPTION) {
                        archivo = fileChooser.getSelectedFile();
                        System.out.println(archivo);
                        modelo2.addElement(archivo);
                        jList2.setModel(modelo2);
                    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            // TODO add your handling code here:
            EscribirArchivo arc;
            LeerArchivo arc1 = new LeerArchivo();;
            int cantidad = 0;
            if(carpeta!=null)
                carpeta.createNewFile();
            else
               JOptionPane.showMessageDialog(null, "Debes Elegir una carpeta destino", "Error", JOptionPane.WARNING_MESSAGE); 
            
            String cadena = jComboBox1.getSelectedItem().toString();
            //System.out.println(cadena);
            int offset=0;
            if(jComboBox1.getSelectedItem() == "ExonIntron"){
                arc = new EscribirArchivo(carpeta.getPath()+"/DataEI.arff", true);
                arc.EscribirEnArchivo("@RELATION ExonIntron");
                offset=4;
            
            }else if(jComboBox1.getSelectedItem() == "IntronExon"){//IntronExon
                arc = new EscribirArchivo(carpeta.getPath()+"/DataIE.arff", true);
                arc.EscribirEnArchivo("@RELATION IntronExon");
                offset=4;
            }
            else if(jComboBox1.getSelectedItem() == "ZIExon"){//IntronExon
                arc = new EscribirArchivo(carpeta.getPath()+"/DataZE.arff", true);
                arc.EscribirEnArchivo("@RELATION ZIExon");
            }else{//IntronExon
                arc = new EscribirArchivo(carpeta.getPath()+"/DataEZ.arff", true);
                arc.EscribirEnArchivo("@RELATION ExonZI");
            }
            if((Integer)jSpinner1.getValue() > 0){
                cantidad = (Integer)jSpinner1.getValue() * 2;
            }else{
                JOptionPane.showMessageDialog(null, "La subcadena debe ser mayor a 0", "Error", JOptionPane.WARNING_MESSAGE); 
            }
            
            for(int i = 1; i <= cantidad; i++){
                arc.EscribirEnArchivo("@ATTRIBUTE B" + i + 
                        " {a,c,g,t}");
            }
            
            arc.EscribirEnArchivo("@ATTRIBUTE CLASS {0,1}");
            arc.EscribirEnArchivo("@DATA");
            
            //---------------------Datos Positivos------------------------
            List <String> archivos = jList1.getSelectedValuesList();
            Iterator item = archivos.iterator();
            boolean band = false;
            int indice_inf = 0, indice_sup = 0;
            while(item.hasNext()){//Existen items seleccionados
                band=true;
                
                LeerArchivo arcp = new LeerArchivo(item.next().toString());
                int lineas = arcp.CantidadLineas();
                String[] Data = new String[lineas];
                Data = arcp.AbrirArchivo();
                for (int i = 0; i < lineas; i++) {
                    String linea = Data[i];
                    String cadena1, cadena2;
                    if (linea.contains("p")) {
                        
                        int j = linea.indexOf("p");
                        indice_inf = j-(cantidad);
                        indice_sup = j+((cantidad)+3)+offset;
                        System.out.println(j);
                        System.out.println(linea.charAt(j+1));
                        //System.out.println(linea.substring(indice_inf, indice_sup));
                        if(indice_inf >= 0 && indice_sup >= 0){
                            //linea = linea.substring(indice_inf, indice_sup);
                            //linea = linea.replaceAll(",p,", ",");
                            cadena1 = linea.substring(indice_inf, j);
                            cadena2 = linea.substring(j+offset+2, indice_sup);
                            linea = cadena1 + cadena2;
                            arc.EscribirEnArchivo(linea+",1");
                            System.out.println(linea + ",1");
                        }else{
                            System.out.println(indice_inf + " " + indice_sup);
                        }
                    }
                }
                
            }
            
            if(band == false){//No seleccionaron ningun items
                ListModel lista = jList1.getModel();
                
                for(int i = 0; i < lista.getSize(); i++){
                    //System.out.println(lista.getElementAt(i));
                    LeerArchivo arcp = new LeerArchivo(lista.getElementAt(i).toString());
                    int lineas = arcp.CantidadLineas();
                    String[] Data = new String[lineas];
                    Data = arcp.AbrirArchivo();
            
                    for (int j = 0; j < lineas; j++) {
                        String linea = Data[j];
                        String cadena1, cadena2;
                        if (linea.contains("p")) {
                            int k = linea.indexOf("p");
                            indice_inf = k - cantidad;
                            indice_sup = k + cantidad + offset+1;
                            //System.out.println(linea.substring(indice_inf, indice_sup));
                            
                            if(indice_inf >= 0 && indice_sup >= 0){
                                System.out.println(k);
                                System.out.println(offset);
                                //linea = linea.substring(indice_inf, indice_sup);
                                //linea = linea.replaceAll(",p,", ",");
                                cadena1 = linea.substring(indice_inf, k);
                                cadena2 = linea.substring(k+offset+2, indice_sup);
                                linea = cadena1 + cadena2;
                                arc.EscribirEnArchivo(linea+",1");
                                //System.out.println(cadena1 + " " + cadena2);
                                //System.out.println(linea + ",1");
                            }else{
                                System.out.println(indice_inf + " " + indice_sup);
                            }//--if-else
                        }//--if
                    }//--for
                }//--for
            }//----if
            
            //---------------------Datos Negativos------------------------
            
            archivos = jList2.getSelectedValuesList();
            item = archivos.iterator();
            band = false;
            indice_inf = 0;
            indice_sup = 0;
            
            while(item.hasNext()){//Existen items seleccionados
                band=true;
                
                LeerArchivo arcp = new LeerArchivo(item.next().toString());
                int lineas = arcp.CantidadLineas();
                String[] Data = new String[lineas];
                Data = arcp.AbrirArchivo();
            
                for (int i = 0; i < lineas; i++) {
                    String linea = Data[i];
                    String cadena1, cadena2;
                    
                    if (linea.contains("p")) {
                        int j = linea.indexOf("p");
                        indice_inf = j-(cantidad);
                        indice_sup = j+((cantidad)+1)+offset;
                        //System.out.println(linea.substring(indice_inf, indice_sup));
                        if(indice_inf >= 0 && indice_sup >= 0){
                            //linea = linea.substring(indice_inf, indice_sup);
                            //linea = linea.replaceAll(",p,", ",");
                            cadena1 = linea.substring(indice_inf, j);
                            cadena2 = linea.substring(j+2+offset, indice_sup);
                            linea = cadena1 + cadena2;
                            arc.EscribirEnArchivo(linea+",0");
                            //System.out.println(linea + ",0");
                        }else{
                            System.out.println(indice_inf + " " + indice_sup);
                        }
                    }
                }
                
            }
            
            if(band == false){//No seleccionaron ningun items
                ListModel lista = jList2.getModel();
                
                for(int i = 0; i < lista.getSize(); i++){
                    //System.out.println(lista.getElementAt(i));
                    LeerArchivo arcp = new LeerArchivo(lista.getElementAt(i).toString());
                    int lineas = arcp.CantidadLineas();
                    String[] Data = new String[lineas];
                    Data = arcp.AbrirArchivo();
            
                    for (int j = 0; j < lineas; j++) {
                        String linea = Data[j];
                        String cadena1, cadena2;
                        
                        if (linea.contains("p")) {
                            int k = linea.indexOf("p");
                            indice_inf = k - cantidad;
                            indice_sup = k+((cantidad))+offset+1;
                            //System.out.println(linea.substring(indice_inf, indice_sup));
                            if(indice_inf >= 0 && indice_sup >= 0){
                                //linea = linea.substring(indice_inf, indice_sup);
                                //linea = linea.replaceAll(",p,", ",");
                                cadena1 = linea.substring(indice_inf, k);
                                cadena2 = linea.substring(k+offset+2, indice_sup);
                                linea = cadena1 + cadena2;
                                arc.EscribirEnArchivo(linea+",0");
                                //System.out.println(linea + ",0");
                            }else{
                                System.out.println(indice_inf + " " + indice_sup);
                            }//--if-else
                        }//--if
                    }//--for
                }//--for
            }//----if
            
        } catch (IOException ex) {
            Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(Formulario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
